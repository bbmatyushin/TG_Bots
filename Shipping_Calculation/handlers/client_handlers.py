from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import StatesGroup, State

from data_files.create_bot import bot, dp
from keyboards.client_kb import kb
from data_files.shippers_and_cities_list import shipper_list, cities_list
from calculation.shippers_calc import TotalResult


class FSMShippingData(StatesGroup):
    derival_city = State()
    arrival_city = State()


async def command_start_help_restart(message: types.Message, state=None):
    await state.reset_data()
    await bot.send_message(message.from_user.id,
                           f"–ë–æ—Ç –Ω–∞ —Å–≤—è–∑–∏! üëã\n"
                           f"–Ø –º–æ–≥—É –ø–æ–º–æ—á—å –±—ã—Å—Ç—Ä–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –≥—Ä—É–∑–∞ \n"
                           f"–∏ —Å—Ä–∞–≤–Ω–∏—Ç—å –µ—ë –º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–º–∏ –∫–æ–º–ø–∞–Ω–∏—è–º–∏.\n\n"
                           f"–°–µ–π—á–∞—Å –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –¢–ö: *{', '.join(shipper_list)}*.",
                           parse_mode="Markdown",
                           reply_markup=kb)
    await FSMShippingData.derival_city.set()
    await bot.send_message(chat_id=message.from_user.id,
                           text=f"üèò –ù–∞–ø–∏—à–∏—Ç–µ –≥–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è:",
                           parse_mode="Markdown")


async def get_derival_city(message: types.Message, state: FSMContext):
    if message.text.title() in cities_list:
        async with state.proxy() as data:
            data["derival_city"] = message.text
        await FSMShippingData.next()
        await message.reply("üè† –ù–∞–ø–∏—à–∏—Ç–µ –≥–æ—Ä–æ–¥ –ø–æ–ª—É—á–∞—Ç–µ–ª—è:")
    else:
        await message.reply(f"‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –ë–æ—Ç—É –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ. "
                            f"–ò–ª–∏ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –æ–ø–µ—á–∞—Ç–∫–∞ ¬Ø\_(„ÉÑ)_/¬Ø\n\n"
                            f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –≥–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è –µ—â—ë —Ä–∞–∑:")


async def get_arrival_city(message: types.Message, state: FSMContext):
    if message.text.title() in cities_list:
        async with state.proxy() as data:
            data["arrival_city"] = message.text

        result_answer = TotalResult().get_simple_result(derival_city=data["derival_city"],
                                                            arrival_city=data["arrival_city"])
        await message.answer(result_answer, parse_mode="Markdown")

        await state.finish()  # –≤—ã—Ö–æ–¥–∏–º –∏–∑ –º–∞—à–∏–Ω–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        await FSMShippingData.derival_city.set()  # –∏ –∑–∞—Ö–æ–¥–∏–º –æ–±—Ä–∞—Ç–Ω–æ, –∂–¥—ë–º –Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ
        await bot.send_message(chat_id=message.from_user.id,
                               text=f"üèò –ù–∞–ø–∏—à–∏—Ç–µ –≥–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è:",
                               parse_mode="Markdown")
    else:
        await message.reply(f"‚ùå –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –ë–æ—Ç—É –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ. "
                            f"–ò–ª–∏ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –æ–ø–µ—á–∞—Ç–∫–∞ ¬Ø\_(„ÉÑ)_/¬Ø\n\n"
                            f"–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –≥–æ—Ä–æ–¥ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –µ—â—ë —Ä–∞–∑:")


# async def command_restart()


def register_handlers(dp: Dispatcher):
    # dp.register_message_handler(command_start_help_restart,
    #                             commands=['start', 'help', 'restart'], state="*")
    dp.register_message_handler(command_start_help_restart,
                                lambda message: message.text in ['/start', '/help', '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å'],
                                content_types=['text'], state="*")
    dp.register_message_handler(get_derival_city, content_types=['text'], state=FSMShippingData.derival_city)
    dp.register_message_handler(get_arrival_city, content_types=['text'], state=FSMShippingData.arrival_city)